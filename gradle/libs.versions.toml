[versions]
plugin-android = "7.3.1"
plugin-kotlin = "1.7.20"

androidx-compose-compiler = "1.3.2"
androidx-compose = "1.3.1"
androidx-material = "1.0.1"
kotlinx-serialization = "1.4.0"
kotlinx-coroutines = "1.6.4"
kotlinx-datetime = "0.4.0"
ktor = "2.1.0"
napier = "2.6.1"
multiplatform-settings = "0.9"
voyager = "1.0.0-rc03"
koin = "3.2.0"
turbine = "0.12.1"
accompanist = "0.25.1"
coil = "2.2.2"
glide = "1.0.0-alpha.1"
activity-compose = "1.5.1"
work-runtime-ktx = "2.7.1"
lifecycle = "2.5.1"
desugar-jdk-libs = "1.1.5"
junit = "4.13.2"
mockk = "1.13.3"


[libraries]
plugin-android = { module = "com.android.tools.build:gradle", version.ref = "plugin-android" }
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "plugin-kotlin" }
plugin-kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "plugin-kotlin" }

androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidx-compose" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidx-compose" }
androidx-material-iconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidx-compose" }
androidx-material3 = { module = "androidx.compose.material3:material3", version.ref = "androidx-material" }


androidx-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "plugin-kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
glide-compose = { module = "com.github.bumptech.glide:compose", version.ref = "glide" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work-runtime-ktx" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-compose-junit = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-compose" }
androidx-compose-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-compose" }
androidx-junit = { module = "androidx.test.ext:junit", version = "1.1.4" }
androidx-test-runner = { module = "androidx.test:runner" ,version = "1.5.1"}
androidx-test-core = { module = "androidx.test:core" ,version = "1.5.0"}
androidx-test-core-kt = { module = "androidx.test:core-ktx" ,version = "1.5.0"}
androidx-test-rules = { module = "androidx.test:rules" ,version = "1.5.0"}
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }

[bundles]
plugins = ["plugin-android", "plugin-kotlin", "plugin-kotlin-serialization"]
